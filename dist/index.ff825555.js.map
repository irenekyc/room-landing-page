{"mappings":"AAAA,KAAK,CAAC,aAAa,GAAG,QAAQ,CAAC,gBAAgB,CAAC,CAAyB;AAEzE,KAAK,CAAC,OAAO,GAAG,CAAC;IACf,IAAI,EAAE,IAAI;IACV,UAAU,EAAE,CAAK;IACjB,SAAS,EAAE,GAAG;AAChB,CAAC;AAED,KAAK,CAAC,QAAQ,IAAI,OAAO,GAAK,CAAC;IAC7B,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAE,KAAK,EAAE,CAAC;QAChC,EAAkD,AAAlD,gDAAkD;QAClD,EAAE,GAAG,KAAK,CAAC,cAAc,EAAE,MAAM;QAEjC,EAAE,EAAE,KAAK,CAAC,cAAc,EACtB,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAkB;IAEjD,CAAC;AACH,CAAC;AAED,GAAG,CAAC,QAAQ,GAAG,GAAG,CAAC,oBAAoB,CAAC,QAAQ,EAAE,OAAO;AAEzD,aAAa,CAAC,OAAO,EAAE,YAAY,GAAK,CAAC;IACvC,QAAQ,CAAC,OAAO,CAAC,YAAY;AAC/B,CAAC","sources":["src/scripts/slide-in.js"],"sourcesContent":["const aboutSections = document.querySelectorAll(\".about-section__content\");\n\nconst options = {\n  root: null,\n  rootMargin: \"0px\",\n  threshold: 0.2,\n};\n\nconst fallBack = (entries) => {\n  entries.forEach(function (entry) {\n    // If the entry is not in the viewport, do nothing\n    if (!entry.isIntersecting) return;\n\n    if (entry.isIntersecting) {\n      entry.target.classList.add(\"slide-in--active\");\n    }\n  });\n};\n\nlet observer = new IntersectionObserver(fallBack, options);\n\naboutSections.forEach((aboutSection) => {\n  observer.observe(aboutSection);\n});\n"],"names":[],"version":3,"file":"index.ff825555.js.map","sourceRoot":"/__parcel_source_root/"}